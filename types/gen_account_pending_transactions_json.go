// Code generated by github.com/AlexanderMint/gencodec2. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/types"
)

var _ = (*accountPendingTransactionsMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (a AccountPendingTransactions) MarshalJSON() ([]byte, error) {
	type AccountPendingTransactions struct {
		PendingTransactions []types.Transaction `json:"pendingTransactions"`
		FirstTxStatus       *TransactionStatus  `json:"firstTxStatus,omitempty"`
		PendingCount        hexutil.Uint64      `json:"pendingCount"`
	}
	var enc AccountPendingTransactions
	enc.PendingTransactions = a.PendingTransactions
	enc.FirstTxStatus = a.FirstTxStatus
	enc.PendingCount = hexutil.Uint64(a.PendingCount)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *AccountPendingTransactions) UnmarshalJSON(input []byte) error {
	type AccountPendingTransactions struct {
		PendingTransactions []types.Transaction `json:"pendingTransactions"`
		FirstTxStatus       *TransactionStatus  `json:"firstTxStatus,omitempty"`
		PendingCount        *hexutil.Uint64     `json:"pendingCount"`
	}
	var dec AccountPendingTransactions
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.PendingTransactions != nil {
		a.PendingTransactions = dec.PendingTransactions
	}
	if dec.FirstTxStatus != nil {
		a.FirstTxStatus = dec.FirstTxStatus
	}
	if dec.PendingCount != nil {
		a.PendingCount = uint64(*dec.PendingCount)
	}
	return nil
}
