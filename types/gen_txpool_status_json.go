// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*txpoolStatusMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (t TxpoolStatus) MarshalJSON() ([]byte, error) {
	type TxpoolStatus struct {
		Pending hexutil.Uint64 `json:"pending"`
		Queued  hexutil.Uint64 `json:"queued"`
	}
	var enc TxpoolStatus
	enc.Pending = hexutil.Uint64(t.Pending)
	enc.Queued = hexutil.Uint64(t.Queued)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TxpoolStatus) UnmarshalJSON(input []byte) error {
	type TxpoolStatus struct {
		Pending *hexutil.Uint64 `json:"pending"`
		Queued  *hexutil.Uint64 `json:"queued"`
	}
	var dec TxpoolStatus
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Pending != nil {
		t.Pending = uint64(*dec.Pending)
	}
	if dec.Queued != nil {
		t.Queued = uint64(*dec.Queued)
	}
	return nil
}
