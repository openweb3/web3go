// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*memoryDiffMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (m MemoryDiff) MarshalJSON() ([]byte, error) {
	type MemoryDiff struct {
		Off  uint          `json:"off"`
		Data hexutil.Bytes `json:"data"`
	}
	var enc MemoryDiff
	enc.Off = m.Off
	enc.Data = m.Data
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (m *MemoryDiff) UnmarshalJSON(input []byte) error {
	type MemoryDiff struct {
		Off  *uint          `json:"off"`
		Data *hexutil.Bytes `json:"data"`
	}
	var dec MemoryDiff
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Off != nil {
		m.Off = *dec.Off
	}
	if dec.Data != nil {
		m.Data = *dec.Data
	}
	return nil
}
