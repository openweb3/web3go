// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
	"github.com/openweb3/web3go/types/enums"
)

var _ = (*localizedSetAuthTraceMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (l LocalizedSetAuthTrace) MarshalJSON() ([]byte, error) {
	type LocalizedSetAuthTrace struct {
		Action              SetAuth              `json:"action"`
		Result              enums.SetAuthOutcome `json:"result"`
		TransactionPosition uint                 `json:"transactionPosition"`
		TransactionHash     common.Hash          `json:"transactionHash"`
		BlockNumber         uint64               `json:"blockNumber"`
		BlockHash           common.Hash          `json:"blockHash"`
	}
	var enc LocalizedSetAuthTrace
	enc.Action = l.Action
	enc.Result = l.Result
	enc.TransactionPosition = l.TransactionPosition
	enc.TransactionHash = l.TransactionHash
	enc.BlockNumber = l.BlockNumber
	enc.BlockHash = l.BlockHash
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (l *LocalizedSetAuthTrace) UnmarshalJSON(input []byte) error {
	type LocalizedSetAuthTrace struct {
		Action              *SetAuth              `json:"action"`
		Result              *enums.SetAuthOutcome `json:"result"`
		TransactionPosition *uint                 `json:"transactionPosition"`
		TransactionHash     *common.Hash          `json:"transactionHash"`
		BlockNumber         *uint64               `json:"blockNumber"`
		BlockHash           *common.Hash          `json:"blockHash"`
	}
	var dec LocalizedSetAuthTrace
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Action != nil {
		l.Action = *dec.Action
	}
	if dec.Result != nil {
		l.Result = *dec.Result
	}
	if dec.TransactionPosition != nil {
		l.TransactionPosition = *dec.TransactionPosition
	}
	if dec.TransactionHash != nil {
		l.TransactionHash = *dec.TransactionHash
	}
	if dec.BlockNumber != nil {
		l.BlockNumber = *dec.BlockNumber
	}
	if dec.BlockHash != nil {
		l.BlockHash = *dec.BlockHash
	}
	return nil
}
